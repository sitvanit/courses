/** The V8 JavaScript Engine **/
V8 is the name of the JavaScript engine that powers Google Chrome. It’s the thing that takes our JavaScript and
executes it while browsing with Chrome.
V8 provides the runtime environment in which JavaScript executes. The DOM, and the other Web Platform APIs are
provided by the browser.
The cool thing is that the JavaScript engine is independent by the browser in which it’s hosted. This key feature
enabled the rise of Node.js. V8 was chosen for being the engine chosen by Node.js back in 2009, and as the popularity
of Node.js exploded, V8 became the engine that now powers an incredible amount of server-side code written in
JavaScript.

V8 is written in C++, and it’s continuously improved. It is portable and runs on Mac, Windows, Linux and several
other systems.

On the web, there is a race for performance that’s been going on for years, and we (as users and developers) benefit
a lot from this competition because we get faster and more optimized machines year after year.

/** compilation **/
JavaScript is generally considered an interpreted language, but modern JavaScript engines no longer just interpret
JavaScript, they compile it.
JavScript is internally compiled by V8 with just-in-time (JIT) compilation to speed up the execution.
