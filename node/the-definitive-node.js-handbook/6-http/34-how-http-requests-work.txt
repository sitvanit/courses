/*** How HTTP requests work ***/

/** The HTTP protocol **/


/* After typing the url in the browser */
Modern browsers have the capability of knowing if the thing you wrote in the address bar is an actual URL or a search
term, and they will use the default search engine if it’s not a valid URL.
I assume you type an actual URL.
When you enter the URL and press enter, the browser first builds the full URL.
If you just entered a domain, like flaviocopes.com, the browser by default will prepend HTTP:// to it, defaulting to the
HTTP protocol.

/* DNS lookup phase */
The browser starts the DNS lookup to get the server IP address.
The domain name is a handy shortcut for us humans, but the internet is organized in such a way that computers can look
up the exact location of a server through its IP address, which is a set of numbers like 222.324.3.1 (IPv4).
First, it checks the DNS local cache, to see if the domain has already been resolved recently.
Chrome has a handy DNS cache visualizer you can see at this URL: chrome://net-internals/#dns.
If nothing is found there, the browser uses the DNS resolver, using the gethostbyname POSIX system call to retrieve the
host information.

/* gethostbyname */
gethostbyname first looks in the local hosts file, which on macOS or Linux is located in /etc/hosts, to see if the
system provides the information locally.
If this does not give any information about the domain, the system makes a request to the DNS server.
The address of the DNS server is stored in the system preferences.
Those are 2 popular DNS servers:
8.8.8.8: the Google public DNS server
1.1.1.1: the CloudFlare DNS server
Most people use the DNS server provided by their internet provider.
The browser performs the DNS request using the UDP protocol.

TCP and UDP are two of the foundational protocols of computer networking. They sit at the same conceptual level, but
TCP is connection-oriented, while UDP is a connectionless protocol, more lightweight, used to send messages with little
overhead.

The DNS server might have the domain IP in the cache. It not, it will ask the root DNS server. That’s a system (composed
of 13 actual servers, distributed across the planet) that drives the entire internet.
The DNS server does not know the address of each and every domain name on the planet.
What it knows is where the top-level DNS resolvers are.

How? When you buy a domain, the domain registrar sends the appropriate TDL the name servers. When you update the name
servers (for example, when you change the hosting provider), this information will be automatically updated by your domain registrar.

Now that we have the IP address, we can go on in our journey.

/* TCP request handshaking */
With the server IP address available, now the browser can initiate a TCP connection to that.
A TCP connection requires a bit of handshaking before it can be fully initialized and you can start sending data.
Once the connection is established, we can send the request.

Once the request is sent, the server processes it and sends back a response.
The response then contains a list of HTTP headers and the response body (which, since we’re making the request in the
browser, is going to be HTML).

/* Parse the HTML */
The browser now has received the HTML and starts to parse it.


